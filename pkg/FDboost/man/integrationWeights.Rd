% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/baselearners.R
\name{integrationWeights}
\alias{@details}
\alias{In}
\alias{Per}
\alias{The}
\alias{Thus}
\alias{\code{\link{bhist}}.}
\alias{\code{\link{bsignal}}-base-learner.}
\alias{\code{integrationWeights()}}
\alias{\code{integrationWeightsLeft()}}
\alias{account}
\alias{adequate}
\alias{all}
\alias{are}
\alias{case}
\alias{computes}
\alias{decide}
\alias{default}
\alias{distance}
\alias{distances}
\alias{do}
\alias{effects}
\alias{equal}
\alias{equal.}
\alias{first}
\alias{for}
\alias{function}
\alias{has}
\alias{historical}
\alias{in}
\alias{integration}
\alias{integrationWeights}
\alias{integrationWeightsLeft}
\alias{into}
\alias{left}
\alias{like}
\alias{observation}
\alias{observation.}
\alias{of}
\alias{one}
\alias{only}
\alias{point.}
\alias{prior}
\alias{regular}
\alias{special}
\alias{symmetric.}
\alias{take}
\alias{that}
\alias{the}
\alias{those}
\alias{to}
\alias{trapezoidal}
\alias{used}
\alias{weights}
\alias{weights,}
\alias{what}
\alias{with}
\alias{xind}
\title{Functions to compute integration weights}
\usage{
integrationWeights(X1, xind, id = NULL)

integrationWeightsLeft(X1, xind, leftWeight = c("first", "mean", "zero"))
}
\arguments{
\item{X1}{matrix of functional variable}

\item{xind}{index of functional variable}

\item{id}{defaults to NULL if \code{X1} is a matrix. identity variable if \code{X1} is in long format.}

\item{leftWeight}{one of \code{c("mean", "first", "zero")}. With left Riemann sums 
different assumptions for the weight of the first observation are possible. 
The default is to use the mean over all integration weights, \code{"mean"}. 
Alternatively one can use the first integration weight, \code{"first"}, or 
use the distance to zero, \code{"zero"}.}
}
\description{
Computes trapezoidal integration weights for a functional variable X1 on grid xind.
}
\examples{
## Example for trapezoidal integration weights
xind0 <- seq(0,1,l=5)
xind <- c(0, 0.1, 0.3, 0.7, 1)
X1 <- matrix(xind^2, ncol=length(xind0), nrow=2)

# Regualar observation points
integrationWeights(X1, xind0)
# Irregular observation points
integrationWeights(X1, xind)

# with missing value
X1[1,2] <- NA
integrationWeights(X1, xind0)
integrationWeights(X1, xind)

## Example for left integration weights
xind0 <- seq(0,1,l=5)
xind <- c(0, 0.1, 0.3, 0.7, 1)
X1 <- matrix(xind^2, ncol=length(xind0), nrow=2)

# Regular observation points
integrationWeightsLeft(X1, xind0, leftWeight="mean") 
integrationWeightsLeft(X1, xind0, leftWeight="first") 
integrationWeightsLeft(X1, xind0, leftWeight="zero")

# Irregular observation points
integrationWeightsLeft(X1, xind, leftWeight="mean") 
integrationWeightsLeft(X1, xind, leftWeight="first") 
integrationWeightsLeft(X1, xind, leftWeight="zero")

# obervation points that do not start with 0
xind2 <- xind + 0.5
integrationWeightsLeft(X1, xind2, leftWeight="zero")
 
}
\seealso{
\code{\link{bsignal}} and \code{\link{bhist}} for the base-learners.
}

