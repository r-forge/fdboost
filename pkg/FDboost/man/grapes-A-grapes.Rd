% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/constrainedX.R
\name{\%A\%}
\alias{\%A\%}
\title{Anisotropic Kronecker Product of two base-learners}
\usage{
bl1 \%A\% bl2
}
\arguments{
\item{bl1}{base-learner 1, e.g. \code{bols(x1)}}

\item{bl2}{base-learner 2, e.g. \code{bols(x2)}}
}
\description{
EXPERIMENTAL! Does not work correctly if weights are specified in the model-call!
}
\details{
EXPERIMENTAL!
Like \%O\% but allows for anisotropic penalty matrices, for
df specified in both base-learners.
Consider
\code{blg1(..., df=df1) \%O\% blg2(..., df=df2)} which results in \code{df=df1*df2},
and thus in a gobal lambda, \eqn{P = lambda ((P1 o I ) + (I o P2))}, with Kronecker product \eqn{o}.
But
\code{blg1(..., df=df1) \%A\% blg2(..., df=df2)} results in computing, two
different values for lambda for the two marginal design matrices and a global value of
lambda to adjsut for the global df, i.e.
\eqn{P = lambda ( ( lambda1 P1 o I ) +  (I o lambda2 P2) )}.
}

